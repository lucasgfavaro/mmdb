group 'lgf.com'
version '1.0-SNAPSHOT'

apply plugin: 'java'


repositories {
    mavenCentral()
}

buildscript{
    ext {
        springBootVersion = '1.5.2.RELEASE'
        springVersion = '4.3.8.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // For Building Docker Image
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

jar {
    baseName = 'mmdb-api'
    version =  '0.1.0'
}


// Three things:
// * Makes Ãœber Jar
// * looks up "public static void main()" method and make it a runnable class
// * Provides a built-in dependency resolver that sets the version number to match Spring Boot dependencies
apply plugin: "org.springframework.boot"

// Three things:
// * the image name (or tag) is set up from the jar file properties, which will end up here as springio/gs-spring-boot-docker
// * the location of the Dockerfile
// * the jar file is copied from the build directory to the same location that Maben leaves it - we only need to do this for the guide so that we can use teh same Dockerfile for Maven and Gradle
apply plugin: 'docker'

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "build/docker/target"
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.5.4.RELEASE")
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


